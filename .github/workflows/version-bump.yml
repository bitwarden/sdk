name: Version Bump
run-name: Version Bump - ${{ inputs.project }} - v${{ inputs.version_number }}

on:
  workflow_dispatch:
    inputs:
      project:
        description: "Project"
        required: true
        type: choice
        options:
          - bitwarden
          - bws
          - napi
          - python-sdk
          - ruby-sdk
          - go-sdk
          - dotnet-sdk
          - php-sdk
          - java-sdk
          - cpp-sdk
      version_number:
        description: "New version (example: '2024.1.0')"
        required: true
      cut_rc_branch:
        description: "Cut RC branch?"
        default: false
        type: boolean

jobs:
  bump_version:
    name: "Bump ${{ inputs.project }} Version to v${{ inputs.version_number }}"
    runs-on: ubuntu-22.04
    steps:
      - name: Install rust
        uses: dtolnay/rust-toolchain@7b1c307e0dcbda6122208f10795a713336a9b35a # stable
        with:
          toolchain: stable

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5

      - name: Install cargo-release
        run: cargo install cargo-edit --locked

      - name: Login to Azure - CI Subscription
        uses: Azure/login@e15b166166a8746d1a47596803bd8c1b595455cf # v1.6.0
        with:
          creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPAL }}

      - name: Retrieve secrets
        id: retrieve-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: "bitwarden-ci"
          secrets: "github-gpg-private-key,
            github-gpg-private-key-passphrase,
            github-pat-bitwarden-devops-bot-repo-scope"

      - name: Checkout Branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: main
          repository: bitwarden/sdk

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5 # v6.2.0
        with:
          gpg_private_key: ${{ steps.retrieve-secrets.outputs.github-gpg-private-key }}
          passphrase: ${{ steps.retrieve-secrets.outputs.github-gpg-private-key-passphrase }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Create Version Branch
        id: branch
        env:
          VERSION: ${{ inputs.version_number }}
          PROJECT: ${{ inputs.project }}
        run: git switch -c sdk-${PROJECT}_version_bump_${VERSION}

      - name: Create Version Branch
        id: create-branch
        run: |
          NAME=version_bump_${{ github.ref_name }}_${{ inputs.project }}_${{ inputs.version_number }}
          git switch -c $NAME
          echo "name=$NAME" >> $GITHUB_OUTPUT

      ########################
      # VERSION BUMP SECTION #
      ########################

      ### napi
      - name: Bump @bitwarden/sdk-napi Version
        if: ${{ inputs.project == 'napi' }}
        working-directory: "crates/bitwarden-napi"
        run: |
          npm ci
          npm version ${{ inputs.version_number }}

      - name: Bump napi crate Version
        if: ${{ inputs.project == 'napi' }}
        run: cargo set-version -p bitwarden-napi ${{ inputs.version_number }}

      ### bitwarden
      - name: Bump bitwarden crate Version
        if: ${{ inputs.project == 'bitwarden' }}
        run: cargo set-version -p bitwarden ${{ inputs.version_number }}

      ### bws
      - name: Bump bws Version
        if: ${{ inputs.project == 'bws' }}
        run: |
          cargo set-version -p bws ${{ inputs.version_number }}
          # bump the version in install.sh
          sed -i 's/DEFAULT_BWS_VERSION="[0-9]\+\.[0-9]\+\.[0-9]\+"/DEFAULT_BWS_VERSION="${{ inputs.version_number }}"/' ./crates/bws/scripts/install.sh
          # bump the version in install.ps1
          sed -i 's/\$defaultBwsVersion = "[0-9]\+\.[0-9]\+\.[0-9]\+"/\$defaultBwsVersion = "${{ inputs.version_number }}"/' ./crates/bws/scripts/install.ps1

      ### python
      - name: Bump python-sdk Version
        if: ${{ inputs.project == 'python-sdk' }}
        run: |
          sed -i 's/version = "[0-9]\.[0-9]\.[0-9]"/version = "${{ inputs.version_number }}"/' ./languages/python/pyproject.toml
          sed -i 's/__version__ = "[0-9]\.[0-9]\.[0-9]"/__version__ = "${{ inputs.version_number }}"/' ./languages/python/bitwarden_sdk/__init__.py

      ### ruby sdk
      - name: Bump ruby-sdk Version
        if: ${{ inputs.project == 'ruby-sdk' }}
        run: sed -i "s/VERSION = '[0-9]\.[0-9]\.[0-9]'/VERSION = '${{ inputs.version_number }}'/" ./languages/ruby/bitwarden_sdk_secrets/lib/version.rb

      ### go sdk
      - name: Bump go-sdk Version
        if: ${{ inputs.project == 'go-sdk' }}
        run: sed -i 's/[0-9]\.[0-9]\.[0-9]/${{ inputs.version_number }}/' ./languages/go/.version

      ### dotnet sdk
      - name: Bump dotnet-sdk Version
        if: ${{ inputs.project == 'dotnet-sdk' }}
        run: sed -i 's/<Version>[0-9]\.[0-9]\.[0-9]<\/Version>/<Version>${{ inputs.version_number }}<\/Version>/' languages/csharp/Bitwarden.Sdk/Bitwarden.Sdk.csproj

      ### php sdk
      - name: Bump php-sdk Version
        if: ${{ inputs.project == 'php-sdk' }}
        run: |
          sed -i 's/"version": "[0-9]\.[0-9]\.[0-9]"/"version": "${{ inputs.version_number }}"/' ./languages/php/composer.json

      ### java sdk
      - name: Bump java-sdk Version
        if: ${{ inputs.project == 'java-sdk' }}
        run: |
          sed -i 's/version = "[0-9]\.[0-9]\.[0-9]"/version = "${{ inputs.version_number }}"/' ./languages/java/build.gradle

      ### cpp sdk
      - name: Bump C++ SDK Version
        if: ${{ inputs.project == 'cpp-sdk' }}
        run: |
          sed -i 's/"version": "[0-9]\.[0-9]\.[0-9]"/"version": "${{ inputs.version_number }}"/' ./languages/cpp/vcpkg.json

      ############################
      # VERSION BUMP SECTION END #
      ############################

      - name: Setup git
        run: |
          git config --local user.email "106330231+bitwarden-devops-bot@users.noreply.github.com"
          git config --local user.name "bitwarden-devops-bot"

      - name: Check if version changed
        id: version-changed
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes_to_commit=TRUE" >> $GITHUB_OUTPUT
          else
            echo "changes_to_commit=FALSE" >> $GITHUB_OUTPUT
            echo "No changes to commit!";
          fi

      - name: Run prettier
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        run: |
          npm ci
          npm run prettier

      - name: Commit files
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        run: git commit -m "Bumped sdk-${{ inputs.project }} version to ${{ inputs.version_number }}" -a

      - name: Push changes
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        env:
          PR_BRANCH: ${{ steps.create-branch.outputs.name }}
        run: git push -u origin $PR_BRANCH

      - name: Create Version PR
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        id: create-pr
        env:
          GH_TOKEN: ${{ steps.retrieve-secrets.outputs.github-pat-bitwarden-devops-bot-repo-scope }}
          PR_BRANCH: ${{ steps.create-branch.outputs.name }}
          TITLE: "Bump ${{ inputs.project }} version to ${{ inputs.version_number }}"
        run: |
          PR_URL=$(gh pr create --title "$TITLE" \
            --base "main" \
            --head "$PR_BRANCH" \
            --label "version update" \
            --label "automated pr" \
            --body "
              ## Type of change
              - [ ] Bug fix
              - [ ] New feature development
              - [ ] Tech debt (refactoring, code cleanup, dependency upgrades, etc)
              - [ ] Build/deploy pipeline (DevOps)
              - [X] Other

              ## Objective
              Automated ${{ inputs.project }} version bump to ${{ inputs.version_number }}")
          echo "pr_number=${PR_URL##*/}" >> $GITHUB_OUTPUT

      - name: Approve PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ steps.create-pr.outputs.pr_number }}
        run: gh pr review $PR_NUMBER --approve

      - name: Merge PR
        env:
          GH_TOKEN: ${{ steps.retrieve-secrets.outputs.github-pat-bitwarden-devops-bot-repo-scope }}
          PR_NUMBER: ${{ steps.create-pr.outputs.pr_number }}
        run: gh pr merge $PR_NUMBER --squash --auto --delete-branch

  cut_rc:
    name: Cut RC branch
    needs: bump_version
    if: ${{ inputs.cut_rc_branch == true }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: main

      - name: Check if RC branch exists
        run: |
          remote_rc_branch_check=$(git ls-remote --heads origin rc | wc -l)
          if [[ "${remote_rc_branch_check}" -gt 0 ]]; then
            echo "Remote RC branch exists."
            echo "Please delete current RC branch before running again."
            exit 1
          fi

      - name: Cut RC branch
        run: |
          git switch --quiet --create rc
          git push --quiet --set-upstream origin rc
