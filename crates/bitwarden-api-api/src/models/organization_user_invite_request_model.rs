/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrganizationUserInviteRequestModel {
    #[serde(rename = "emails")]
    pub emails: Vec<String>,
    #[serde(rename = "type")]
    pub r#type: models::OrganizationUserType,
    #[serde(
        rename = "accessSecretsManager",
        skip_serializing_if = "Option::is_none"
    )]
    pub access_secrets_manager: Option<bool>,
    #[serde(rename = "permissions", skip_serializing_if = "Option::is_none")]
    pub permissions: Option<Box<models::Permissions>>,
    #[serde(rename = "collections", skip_serializing_if = "Option::is_none")]
    pub collections: Option<Vec<models::SelectionReadOnlyRequestModel>>,
    #[serde(rename = "groups", skip_serializing_if = "Option::is_none")]
    pub groups: Option<Vec<uuid::Uuid>>,
}

impl OrganizationUserInviteRequestModel {
    pub fn new(
        emails: Vec<String>,
        r#type: models::OrganizationUserType,
    ) -> OrganizationUserInviteRequestModel {
        OrganizationUserInviteRequestModel {
            emails,
            r#type,
            access_secrets_manager: None,
            permissions: None,
            collections: None,
            groups: None,
        }
    }
}
