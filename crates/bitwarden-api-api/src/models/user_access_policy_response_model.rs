/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserAccessPolicyResponseModel {
    #[serde(rename = "object", skip_serializing_if = "Option::is_none")]
    pub object: Option<String>,
    #[serde(rename = "read", skip_serializing_if = "Option::is_none")]
    pub read: Option<bool>,
    #[serde(rename = "write", skip_serializing_if = "Option::is_none")]
    pub write: Option<bool>,
    #[serde(rename = "organizationUserId", skip_serializing_if = "Option::is_none")]
    pub organization_user_id: Option<uuid::Uuid>,
    #[serde(
        rename = "organizationUserName",
        skip_serializing_if = "Option::is_none"
    )]
    pub organization_user_name: Option<String>,
    #[serde(rename = "currentUser", skip_serializing_if = "Option::is_none")]
    pub current_user: Option<bool>,
}

impl UserAccessPolicyResponseModel {
    pub fn new() -> UserAccessPolicyResponseModel {
        UserAccessPolicyResponseModel {
            object: None,
            read: None,
            write: None,
            organization_user_id: None,
            organization_user_name: None,
            current_user: None,
        }
    }
}
