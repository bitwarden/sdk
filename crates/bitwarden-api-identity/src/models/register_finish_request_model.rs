/*
 * Bitwarden Identity
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RegisterFinishRequestModel {
    #[serde(rename = "email")]
    pub email: Option<String>,
    #[serde(
        rename = "emailVerificationToken",
        skip_serializing_if = "Option::is_none"
    )]
    pub email_verification_token: Option<String>,
    #[serde(rename = "masterPasswordHash")]
    pub master_password_hash: Option<String>,
    #[serde(rename = "masterPasswordHint", skip_serializing_if = "Option::is_none")]
    pub master_password_hint: Option<String>,
    #[serde(rename = "userSymmetricKey")]
    pub user_symmetric_key: Option<String>,
    #[serde(rename = "userAsymmetricKeys")]
    pub user_asymmetric_keys: Box<models::KeysRequestModel>,
    #[serde(rename = "kdf")]
    pub kdf: models::KdfType,
    #[serde(rename = "kdfIterations")]
    pub kdf_iterations: i32,
    #[serde(rename = "kdfMemory", skip_serializing_if = "Option::is_none")]
    pub kdf_memory: Option<i32>,
    #[serde(rename = "kdfParallelism", skip_serializing_if = "Option::is_none")]
    pub kdf_parallelism: Option<i32>,
    #[serde(rename = "organizationUserId", skip_serializing_if = "Option::is_none")]
    pub organization_user_id: Option<uuid::Uuid>,
    #[serde(rename = "orgInviteToken", skip_serializing_if = "Option::is_none")]
    pub org_invite_token: Option<String>,
}

impl RegisterFinishRequestModel {
    pub fn new(
        email: Option<String>,
        master_password_hash: Option<String>,
        user_symmetric_key: Option<String>,
        user_asymmetric_keys: models::KeysRequestModel,
        kdf: models::KdfType,
        kdf_iterations: i32,
    ) -> RegisterFinishRequestModel {
        RegisterFinishRequestModel {
            email,
            email_verification_token: None,
            master_password_hash,
            master_password_hint: None,
            user_symmetric_key,
            user_asymmetric_keys: Box::new(user_asymmetric_keys),
            kdf,
            kdf_iterations,
            kdf_memory: None,
            kdf_parallelism: None,
            organization_user_id: None,
            org_invite_token: None,
        }
    }
}
